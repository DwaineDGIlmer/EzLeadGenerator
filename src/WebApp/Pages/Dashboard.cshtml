@page
@using System.Text.Json
@using WebApp.Pages;
@model DashboardModel
@{
    ViewData["Dashboard"] = "Overall metrics and insights";
}
<!-- Foundational style sheet -->
<link rel="stylesheet" href="~/css/ezleadgenerator.styles.css" />
<link rel="stylesheet" href="~/css/dashboard.styles.css" />
<style>    
    .dashboard-container {
        max-width: 1200px;
        margin-left: 0;
        margin-right: auto;
        padding: 0 1rem;
    }
  
</style>

<h2 class="mb-4">Job Metrics Dashboard</h2>
<div class="dashboard-container">
    <!-- KPI Cards -->
    <div class="kpi-dashboard">
        <div class="kpi-card">
            <span class="kpi-icon">&#128188;</span>
            <div class="kpi-value">@Model.TotalJobs</div>
            <div class="kpi-label">Total Jobs</div>
        </div>
        <div class="kpi-card">
            <span class="kpi-icon">&#128203;</span>
            <div class="kpi-value">@Model.TotalCompanies</div>
            <div class="kpi-label">Companies</div>
        </div>
        <div class="kpi-card">
            <span class="kpi-icon">&#128101;</span>
            <div class="kpi-value">@Model.TotalAgencies</div>
            <div class="kpi-label">Agencies</div>
        </div>
    </div>

    <div class="dashboard-row">
        <!-- Company/Agency Table -->
        <div class="dashboard-section" style="flex:2;">
            <div class="section-title">Company & Hiring Agency</div>
            <table>
                <thead>
                    <tr>
                        <th>Company</th>
                        <th>Agency</th>
                        <th>Job Count</th>
                        <th>Latest Posting</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in Model.CompanyAgencyTable)
                    {
                        <tr>
                            <td>@row.CompanyName</td>
                            <td>@row.HiringAgency</td>
                            <td>@row.JobCount</td>
                            <td>@row.LatestPosting.ToString("yyyy-MM-dd")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="dashboard-charts">
        <!-- Top Companies Bar Chart -->
        <div class="dashboard-section">
            <div class="section-title">Top Companies by Job Openings</div>
            <canvas id="companiesBarChart"></canvas>
        </div>
        <!-- Job Title Distribution Bar Chart -->
        <div class="dashboard-section">
            <div class="section-title">Job Title Distribution</div>
            <canvas id="jobTitlesBarChart"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Data for Top Companies Bar Chart
        const companiesLabels = @Html.Raw(JsonSerializer.Serialize(Model.TopCompanies.Select(c => c.CompanyName)));
        const companiesData = @Html.Raw(JsonSerializer.Serialize(Model.TopCompanies.Select(c => c.JobCount)));

        const ctxCompanies = document.getElementById('companiesBarChart').getContext('2d');
        new Chart(ctxCompanies, {
            type: 'bar',
            data: {
                labels: companiesLabels,
                datasets: [{
                    label: 'Job Openings',
                    data: companiesData,
                    backgroundColor: '#2b5876'
                }]
            },
            options: {
                indexAxis: 'y',
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    x: { beginAtZero: true }
                }
            }
        });

        // Data for Job Title Distribution Bar Chart
        const jobTitlesLabels = @Html.Raw(JsonSerializer.Serialize(Model.JobTitleDistribution.Select(j => j.JobTitle)));
        const jobTitlesData = @Html.Raw(JsonSerializer.Serialize(Model.JobTitleDistribution.Select(j => j.Count)));

        const ctxJobTitles = document.getElementById('jobTitlesBarChart').getContext('2d');
        new Chart(ctxJobTitles, {
            type: 'bar',
            data: {
                labels: jobTitlesLabels,
                datasets: [{
                    label: 'Count',
                    data: jobTitlesData,
                    backgroundColor: '#4e4376'
                }]
            },
            options: {
                indexAxis: 'y',
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    x: { beginAtZero: true }
                }
            }
        });
    </script>
}